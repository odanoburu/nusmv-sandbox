MODULE main
 VAR
   goal-line : {goal, idle} ;
   ball      : {inside, outside} ;
 ASSIGN
   -- init
   init(goal-line) := idle ;
   init(ball)      := outside ;
   -- trans
   next(ball) := case
                   -- if ball is outside, ball may enter goal or not
                   ball = outside : {outside, inside} ;
                   -- ball must go out before going in again
                   ball = inside  : outside ;
                 esac ;
   next(goal-line) := case
                        -- when ball goes in, goal!
                        next(ball) = inside : goal ;
                        -- after indicating goal, stop. in this same
                        -- step ball will do inside -> outside
                        goal-line = goal : idle ;
                        -- nothing happened, nothing happens
                        next(ball) = outside : idle ;
                      esac ;
 -- ball inside goal induces goal line system
 CTLSPEC AG ball = inside -> goal-line = goal
 -- goal-line off means ball hasn't entered
 CTLSPEC AG goal-line = idle -> ball = outside
 -- no goals is a possibility
 CTLSPEC EG ball = outside & goal-line = idle
 -- ball inside goal means goal
 INVARSPEC ball = inside -> goal-line = goal
 -- ball outside goal means no goal accused
 INVARSPEC ball = outside -> goal-line = idle
