MODULE main
 VAR
   goal-line : {goal, nothing} ;
   ball : {inside, outside} ;
 ASSIGN
   init(goal-line) := nothing ;
   init(ball) := outside ;
   next(ball) := case
                   -- if there hasn't been a goal and ball is outside,
                   -- ball may enter goal or not
                   ball = outside & goal-line = nothing : {outside, inside} ;
                   --just after goal is marked, ball must stay outside
                   ball = outside & goal-line = goal : outside ;
                   -- ball must go out before going in again
                   ball = inside  : outside ;
                  esac ;
   next(goal-line) := case
                        -- when ball goes in, goal!
                        ball = inside : goal ;
                        -- after indicating goal, stop. in this same
                        -- step ball will do inside -> outside
                        goal-line = goal : nothing ;
                        -- nothing happened, nothing happens
                        ball = outside : nothing ;
                      esac ;
 -- ball inside goal induces goal line system
 CTLSPEC AG ball = inside -> AX goal-line = goal
 -- goal-line off means ball hasn't entered
 CTLSPEC AG goal-line = nothing -> AX ball = outside
 -- no goals is a possibility
 CTLSPEC EG ball = outside & goal-line = nothing
 -- ball inside goal means goal in next state
 INVARSPEC ball = inside -> next(goal-line) = goal
 -- ball outside goal means no goal accused in next state
 INVARSPEC ball = outside -> next(goal-line) = nothing
